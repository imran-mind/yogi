{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/auth.service.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/header/header.component.css","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/registration/registration.component.css","./src/app/registration/registration.component.html","./src/app/registration/registration.component.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes,CanActivate } from '@angular/router';\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\nimport { AuthGuardService  } from './auth-guard.service';\nimport { AuthService  } from './auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClientModule } from '@angular/common/http'\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService } from './user.service';\n\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeaderComponent } from './header/header.component';\n\n\nconst appRoutes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegistrationComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n   path: '**',\n   redirectTo: 'login'\n }\n];\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\nexport const AppRoutes = RouterModule.forRoot(appRoutes, { initialNavigation: false });\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    DashboardComponent,\n    HeaderComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        // whitelistedDomains: ['localhost:8080'],\n        // blacklistedRoutes: ['localhost:8080/dashboard']\n      }\n    })\n    ],\n  providers: [\n    UserService,\n    CookieService,\n    AuthGuardService,\n    AuthService,\n    JwtHelperService\n],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    // if (!this.auth.isAuthenticated()) {\n    //   this.router.navigate(['login']);\n    //   return false;\n    // }\n\n    if (localStorage.getItem('token')) {\n            // logged in so return true\n            return true;\n    }else{\n        return false;\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth-guard.service.ts","\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public jwtHelper: JwtHelperService) {}\n\n  // ...\n  public isAuthenticated(): boolean {\n\n    const token = localStorage.getItem('token');\n\n    // Check whether the token is expired and return\n    // true or false\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n<button (click)=\\\"signOut()\\\">Sign Out</button>\\n<h1> User details </h1>\\n<h3>UserId :  {{userId}} <h3>\\n<h3>FirstName : {{firstName}} <h3>\\n<h3>LastName :  {{lastName}} <h3>\\n<h3>Username : {{username}} <h3>\\n<h3>Jwt Token : {{jwtToken}} <h3>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService  } from '../auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  userId :String;\n  firstName : String;\n  lastName :String;\n  username :String;\n  jwtToken :String;\n\n  constructor(private router :Router ,private auth :AuthService) {\n    this.userId = localStorage.getItem('userId');\n    this.firstName = localStorage.getItem('firstName');\n    this.lastName = localStorage.getItem('lastName');\n    this.username = localStorage.getItem('username');\n    this.jwtToken = localStorage.getItem('token');\n  }\n\n  ngOnInit() {\n  }\n\n  signOut(){\n    // localStorage.setItem('token',null);\n    alert('sign out');\n    localStorage.removeItem('token');\n    // this.auth.logout();\n    this.router.navigate(['login']);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = ./src/app/header/header.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-primary\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Welcome to Learning Yogi</a>\\n    </div>\\n    <div class=\\\"pull-right\\\">\\n    </div>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = ./src/app/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n<section class=\\\"login-section\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-6 col-md-offset-3\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"errorAlert\\\" class=\\\"alert alert-info text-center\\\">\\n\\t\\t\\t\\t\\t{{unauthorizeUser}}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title\\\">Login</h4>\\n\\t\\t\\t\\t\\t\\t<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && userLogin()\\\" #f=\\\"ngForm\\\" novalidate>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !username.valid } \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"username\\\">Username</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"login.username\\\" #username=\\\"ngModel\\\" required />\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">Username is required</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"login.password\\\" #password=\\\"ngModel\\\" required />\\n\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Login</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-link\\\">Register</a>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n              <div>\\n                <input type=\\\"checkbox\\\"  name=\\\"rememberme\\\" [(ngModel)]=\\\"login.rememberme\\\"> Remember me \\n              </div>\\n\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'angular2-cookie/services/cookies.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // user: User;\n      errorMessage: String;\n      customResponse: any;\n      login: any = {};\n      errorAlert: Boolean = false;\n      unauthorizeUser: any;\n      serverResponse: any;\n      response: any;\n      error: any;\n      googleAuthUrl: any;\n      windwOpenForLogin: any;\n      token: string;\n\n  constructor(private router: Router,\n    private userService: UserService,\n   private _cookieService:CookieService) {\n     console.log(\"******** \"+_cookieService.get('remember'));\n     if(_cookieService.get('remember')){\n      this.login.username=this._cookieService.get('username');\n      this.login.password=this._cookieService.get('password');\n      this.login.rememberme=this._cookieService.get('remember');\n      }\n    }\n\n  ngOnInit() {\n  }\n\n\n  userLogin() {\n    console.log('<========Inside register function========>');\n    console.log (\"-----> login object \",this.login);\n    if(this.login.rememberme ==true){\n      this._cookieService.put('username',this.login.username);\n      this._cookieService.put('password',this.login.password);\n      this._cookieService.put('remember',this.login.rememberme);\n    }\n    this.userService.userLogin(this.login)\n      .then(user => {\n        // this.serverResponse = user;\n        this.customResponse = <any>user;\n        console.log(this.customResponse);\n        if (this.customResponse) {\n            if (this.customResponse.statusCode === 200 && this.customResponse.found == false) {\n                console.log('..........invalid........');\n                this.errorAlert = true;\n                this.unauthorizeUser = \"invalid username or pasword\";\n                setTimeout(() => {\n                  this.errorAlert =false;\n                }, 2000);\n            }\n            else if (this.customResponse.statusCode === 200) {\n                localStorage.setItem('token', this.customResponse.access_token);\n                localStorage.setItem('firstName', this.customResponse.firstName);\n                localStorage.setItem('lastName', this.customResponse.lastName);\n                localStorage.setItem('username', this.customResponse.username);\n                localStorage.setItem('userId', this.customResponse.id);\n                this.router.navigate(['dashboard']);\n            } else {\n                this.router.navigate(['']);\n            }\n        }\n      })\n      .catch(error => {\n        console.log('--------Error-In-SignUp----------');\n      });\n  }\n  // userLogin() {\n  //         this.userService.userLogin(this.login)\n  //             .subscribe(res => {\n  //                 this.customResponse = <any>res;\n  //                 console.log(this.customResponse);\n  //                 if (this.customResponse) {\n  //                     if (this.customResponse.statusCode === 401) {\n  //                         console.log('..........invalid........');\n  //                         this.router.navigate(['/']);\n  //                         this.errorAlert = true;\n  //                         this.unauthorizeUser = \"invalid user name or pasword\";\n  //                     }\n  //                     if (this.customResponse.statusCode === 200) {\n  //                         localStorage.setItem('token', 'Bearer ' + this.customResponse.token);\n  //                         localStorage.setItem('name', this.customResponse.name);\n  //                         localStorage.setItem('userId', this.customResponse.id);\n  //                         this.router.navigate(['dashboard']);\n  //                     } else {\n  //                         this.router.navigate(['']);\n  //                     }\n  //                 }\n  //             },\n  //             error => {\n  //                 this.errorMessage = <any>error\n  //                 console.log('------------------------caught error-------------------', JSON.stringify(this.errorMessage));\n  //             });\n  //     }\n}\n\n\ninterface CustomResponse {\n    statusCode: number;\n    token: string;\n    message: string;\n    name: string;\n    id: string\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.component.css\n// module id = ./src/app/registration/registration.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n<section class=\\\"login-section\\\">\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3 mt-8\\\">\\n      <div *ngIf=\\\"successAlert\\\" class=\\\"alert alert-info text-center\\\">\\n        {{alertMessage}}\\n      </div>\\n      <div *ngIf=\\\"alreadyExistAlert\\\" class=\\\"alert alert-info text-center\\\">\\n        {{alertMessage}}\\n      </div>\\n      <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\n\\n          <div class=\\\"card-block\\\">\\n            <h4 class=\\\"card-title\\\">Login</h4>\\n            <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && register()\\\" novalidate>\\n\\n                        <div class=\\\"form-group col-md-12 \\\">\\n                          <label for=\\\"firstName\\\">First Name</label>\\n                          <input type=\\\"text\\\" #firstName=\\\"ngModel\\\" minlength=\\\"2\\\" maxlength=\\\"50\\\" pattern=\\\"[a-zA-Z][a-zA-Z ]+\\\" class=\\\"form-control\\\" name=\\\"firstName\\\"\\n                            [(ngModel)]='model.firstName' required/>\\n                          <div *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div [hidden]=\\\"!firstName.errors.required\\\">\\n                              please enter Fisrt Name\\n                            </div>\\n                            <div [hidden]=\\\"!firstName.errors.minlength\\\">\\n                              please enter atleast 2 characters\\n                            </div>\\n                            <div [hidden]=\\\"!firstName.errors.pattern\\\">\\n                              Only alphabets are allowed\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-12\\\">\\n                          <label>Last Name</label>\\n                          <input type=\\\"text\\\" #lastName=\\\"ngModel\\\" minlength=\\\"2\\\"\\n                          maxlength=\\\"50\\\" pattern=\\\"[a-zA-Z][a-zA-Z ]+\\\" class=\\\"form-control\\\" name=\\\"lastName\\\"\\n                            [(ngModel)]=\\\"model.lastName\\\" required>\\n\\n                          <div *ngIf=\\\"lastName.errors && (lastName.dirty || lastName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div [hidden]=\\\"!lastName.errors.required\\\">\\n                              please enter Last Name\\n                            </div>\\n                            <div [hidden]=\\\"!lastName.errors.minlength\\\">\\n                              please enter atleast 2 characters\\n                            </div>\\n                            <div [hidden]=\\\"!lastName.errors.pattern\\\">\\n                              Only alphabets are allowed\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-12\\\">\\n                          <label>Email</label>\\n                          <input type=\\\"text\\\" #username=\\\"ngModel\\\" class=\\\"form-control\\\" maxlength=\\\"50\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                            name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" required>\\n                          <div *ngIf=\\\"username.errors && (username.dirty || username.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div [hidden]=\\\"!username.errors.required\\\">\\n                              please enter an Email\\n                            </div>\\n                            <div [hidden]=\\\"!username.errors.pattern\\\">\\n                              Email format should be\\n                              <small>\\n                                <b>joe@abc.com</b>\\n                              </small>\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-md-12\\\">\\n                          <label>password</label>\\n                          <input type=\\\"password\\\" #password=\\\"ngModel\\\" minlength=\\\"2\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\" name=\\\"password\\\" value=\\\"\\\" [(ngModel)]=\\\"model.password\\\"\\n                            required>\\n                          <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div [hidden]=\\\"!password.errors.required\\\">\\n                              please enter a passwrod\\n                            </div>\\n                            <div [hidden]=\\\"!password.errors.minlength\\\">\\n                              please enter atleast 2 characters\\n                            </div>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"text-center\\\">\\n                          <button [disabled]=\\\"!f.form.valid\\\" class=\\\"btn btn-primary\\\">Signup</button>\\n                          <a href [routerLink]=\\\"['/']\\\">Login</a>\\n                        </div>\\n                      </form>\\n                    </div>\\n          </div>\\n\\n    </div>\\n  </div>\\n</div>\\n</section>\\n\\n\\n\\n\\n\\n\\n<!-- <div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3 mt-8\\\">\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && register()\\\" novalidate>\\n        <div class=\\\"form-group col-md-12 \\\" [ngClass]=\\\"{'has-error':f.submitted && !username.valid}\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]='model.firstName' #firstName=\\\"ngModel\\\" required/>\\n          <div *ngIf=\\\"f.submitted && !firstName.valid\\\" class=\\\"help-block\\\">First Name is required</div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-12\\\" [ngClass]=\\\"{'has-error':f.submitted &&!username.valid}\\\">\\n          <label>Last Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\" #lastName=\\\"ngModel\\\" required>\\n          <div *ngIf=\\\"f.submitted && !lastName.valid\\\" class=\\\"help-block\\\">Last Name is required</div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-12\\\" [ngClass]=\\\"{'has-error':f.submitted &&!username.valid}\\\"  >\\n          <label>Username</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\"  [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" required  ng-reflect-hidden=\\\"false\\\" hidden>\\n          <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">username is required</div>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-12\\\" [ngClass]=\\\"{'has-error':f.submitted &&!pwd.valid}\\\">\\n          <label>password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pwd\\\" value=\\\"\\\" [(ngModel)]=\\\"model.pwd\\\" #pwd=\\\"ngModel\\\" required>\\n          <div *ngIf=\\\"f.submitted && !pwd.valid\\\" class=\\\"help-block\\\">password is required</div>\\n        </div>\\n\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-primary\\\">Signup</button>\\n          <a [routerLink]=\\\"['/']\\\">Cancle</a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.component.html\n// module id = ./src/app/registration/registration.component.html\n// module chunks = main","import { Component, OnInit,ElementRef } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Http, Response } from '@angular/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  model: any = {};\n  error: any;\n  serverResponse: any;\n  successAlert: Boolean = false;\n  alreadyExistAlert: Boolean = false;\n  alertMessage: any;\n\n  constructor(private userService: UserService, private http: Http,\n    private router: Router, private el: ElementRef) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    console.log('<========Inside register function========>')\n    this.userService.registerUser(this.model)\n      .then(user => {\n        this.serverResponse = user;\n        if (this.serverResponse.statusCode !== 201 && this.serverResponse.statusCode !== 200) {\n          console.log('something went wrong');\n        }\n        else if (this.serverResponse.statusCode === 201) {\n          console.log(this.serverResponse.message);\n\n          this.successAlert = true;\n          this.alertMessage = \"successfully created\";\n          setTimeout(() => {\n            this.router.navigate(['/']);\n          }, 2000);\n        }\n\n        else  if (this.serverResponse.statusCode == 200 && this.serverResponse.userExist ==true) {\n          console.log(this.serverResponse.message);\n          this.alreadyExistAlert = true;\n          this.alertMessage = \"User already exist with this email please use another email\";\n          setTimeout(() => {\n            this.alreadyExistAlert =false;\n          }, 2000);\n        }\n      })\n      .catch(error => {\n        console.log('--------Error-In-SignUp----------');\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class UserService {\n   registerUrl = \"http://localhost:8080/register\";\n  loginUrl = \"http://localhost:8080/login\";\n  constructor(private http: Http) { }\n\n\n  /*register user */\n  registerUser(user: any): Promise<any> {\n          console.log('-------model--------------');\n          console.log(user);\n          let headers = new Headers({ 'Content-Type': 'application/json' });\n          let options = new RequestOptions({ headers: headers });\n          return this.http.post(this.registerUrl, user,options)\n              .toPromise()\n              .then(response => response.json())\n              .catch(this.handleError);\n  }\n\n  /*register user */\n  userLogin(user: any): Promise<any> {\n          console.log('-------model--------------');\n          console.log(user);\n          let headers = new Headers({ 'Content-Type': 'application/json' });\n          let options = new RequestOptions({ headers: headers });\n          return this.http.post(this.loginUrl, user,options)\n              .toPromise()\n              .then(response => response.json())\n              .catch(this.handleError);\n  }\n\n/*login user */\n  // userLogin(user: any): Observable<any> {\n  //     let headers = new Headers({ 'Content-Type': 'application/json' });\n  //     let options = new RequestOptions({ headers: headers });\n  //     return this.http.post(this.loginUrl, user, options)\n  //         .map(this.extractData)\n  //         .catch(this.handleErrorObservable);\n  // }\n\n  private extractData(res: Response) {\n        let body = res.json();\n        console.log('*********************');\n        console.log(body);\n        return body || {};\n    }\n\n    private handleErrorObservable(error: Response | any) {\n        console.error(error.message || error);\n        return Observable.throw(error.message || error);\n    }\n  private handleError(error: any): Promise<any> {\n      console.error('An error occurred*********', error); // for demo purposes only\n      return Promise.reject(error.message || error);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}